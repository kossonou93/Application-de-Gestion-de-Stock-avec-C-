<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAPiSURBVGhD7ZddSJNhFMetoLrpIoouuumqeVFRUjdlF+ocUn6E6YuGRfaBXui7sCjdVjGwoJRI
        SPAjsCK0KIqiD5W86IPIIC2yi4zKPrQsIldtFTR3OkfPxvb46D7a3i3YH3748jzn+Z//efZOMSGuuOIK
        n5KTk+ekpaVtQS4iz5BPCLhJTU1N5tLYEwbMRQa9A4vgALe4PLaE4axi2Cno0+v1NQaDYSEfj67wVk2S
        kIHgwEEK2CY6wgCrMcgfIVgwOPECMthOe2GAO0KgUHivKMpMttROKSkpqyRhpBTl6qG5KgP6T2WO/ZTU
        bGJb7YRNq4UQPmxT0uH0/gwYOJsJ0J7tA60L9WfZVjth09tCCJ+bFkOLCJ/EI7bVTvjle0fNp7ppf3h9
        Em/ZVjthUwc1lwULBh7AzrbaiRtLQwWD24dttdN/PQCcX5y1u2jNz3ANULF5jQNadevZPvKCc7p3o22J
        UL83wydM8w4dnNyZ6LPmjWyffhu52nSAnm/YPvLCZoOITxCicdtiaNo+cd3NpPvkhZfC9pEXvULYcAhu
        ZromhAka9KAL0fIVcgvac/rloYLiOdtpL2zeJIQJhUa2017QmWOQBAqOjg3pbBcdYYiuCaECJiv6/2Li
        9yAROrJH5AGngM7cWK9jm+gKOnJSMZRtQsjJwdqsFD4eG4LOzKVwda0srC9XsKYjewkfiy1BYwLAmQUA
        F1cAXNMD/p0Yh55pjfawhstjT2MDBACXx55kYWVweWxIKT+wLM9oOpavmp696Lk+BK8uAHRX4muTDnBq
        7jj0TGu41997fZBq6QydZRvtlVduWZVvNHch4GZfbf0d8NLnlpYxvLX36Im73meQLsVYtZJtI6/iYuvs
        fNXSjI1HhSCE44fd/pWCfmpogL7ly8egZxLufaEa4Qwxmmc0N61T1VncJjLaWGZZpBgtTyQBPDS0Xb5N
        YYfr6jwD0DOJ9mRn3JA39eB24dWmPdb5eEv9ssbeFFYcGHC5XKPOkRHPAE6bDXDNWVCx/7XsjDfUI7fM
        NI/bhk3T8o2WTllDGfcePXlo7+nxDODo7YW7uCarlWNpp57jrcMgRTUXyxvJKT1Y0/310iXPAPRcevBI
        t6x2MvC31FZu/29SFGUGGvr96AWcfdWHv7sHeFp9yEZrQs2U4Kv00mq1TucYoUvZZTbIGvijpkQddg9Q
        W6p+lNUEgJ5jhC68iTqJsV8K1Srb46QkIApV0zdZjV92mY5zjNClGM0PpOYB0FpQZG8t2GyX7QXIfY4R
        utBkWDANmJKyysGS8n1Dsr0A+cAxQhea/BZMteQXx4grrrikSkj4Cw9evbx3x6SfAAAAAElFTkSuQmCC
</value>
  </data>
</root>